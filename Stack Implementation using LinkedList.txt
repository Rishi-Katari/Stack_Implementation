Disadvantages of Array Implementation--

It is not dynamic, it doesnâ€™t grow and shrink depending on needs at runtime. 
The total size of the stack must be defined beforehand.


//Stack Implementation using Linked List
public class StackAsLinkedList { 
	StackNode root; 
	static class StackNode { 
		int data; 
		StackNode next; 
		StackNode(int data) { this.data = data; } 
	} 
	public boolean isEmpty() 
	{ 
		if (root == null) { 
			return true; 
		} 
		else
			return false; 
	} 

	public void push(int data) 
	{ 
		StackNode newNode = new StackNode(data); 

		if (root == null) { 
			root = newNode; 
		} 
		else { 
			StackNode temp = root; 
			root = newNode; 
			newNode.next = temp; 
		} 
		System.out.println(data + " pushed to stack"); 
	} 

	public int pop() 
	{ 
		int popped = Integer.MIN_VALUE; 
		if (root == null) { 
			System.out.println("Stack is Empty"); 
		} 
		else { 
			popped = root.data; 
			root = root.next; 
		} 
		return popped; 
	} 

	public int peek() 
	{ 
		if (root == null) { 
			System.out.println("Stack is empty"); 
			return Integer.MIN_VALUE; 
		} 
		else { 
			return root.data; 
		} 
	} 

	// Main Class
	public static void main(String[] args) 
	{ 
		StackAsLinkedList sll = new StackAsLinkedList(); 
		sll.push(1); 
		sll.push(2); 
		sll.push(3); 

		System.out.println(sll.pop() 
						+ " is popped from stack"); 

		System.out.println("Top element in the stack is " + sll.peek()); 
	} 
}
